#include <iostream>
using namespace std;

int main()
{
	int test_case; // test case 개수
	cin >> test_case; // 사용자로부터 입력받음

	while (test_case--) { // test case 하나 당
		int a, b; // a^b의 형태로 주어지는 데이터 개수를 위한
		cin >> a >> b; // a, b를 사용자로부터 입력받음

		/*
		1. 그냥 무작정 <cmath> 헤더파일의 pow함수를 사용하게 되면 자료형의 범위를 넘어가 오류가 발생한다.
		이 문제에서 요구하는 것은 결과의 1의 자리이고, 1의 자리는 곱할 수들의 1의자리끼리만 곱해도 구할 수 있으므로
		a를 b번 곱하는 과정에서 매번 10으로 나눈 나머지(즉, 1의 자리)를 구하여 a를 곱해주면 결과를 구할 수 있다.

		2. 같은 수를 계속 곱했을 때 1의 자리수는 최소 1주기에서 최대 4주기로 반복된다.
		ex) 7x7 = 4'9', 9x7 = 6'3', 3x7 = 2'1', 1x7 = '7'
		따라서 b가 얼마나 큰 숫자이던지 상관없이 4로 나눈 나머지만큼 곱해도 같은 결과가 나온다는 것이다.
		단, 4로 나눈 나머지가 0이면 결과가 1이 되어버리므로 이것을 방지하기 위해 4를 더해준다.
		*/

		int data = a; // data에 먼저 초기값 a를 넣어준다.
		b = b % 4 + 4; // b대신 b를 4로 나눈 나머지 + 4를 대입해준다.

		for (int i = 1; i < b; i++) { // data에 a를 한번 넣었으므로 b - 1번만큼 추가로 a를 곱해준다.
			data = (data * a) % 10; // 단, 1의자리만 구하면 되므로 매번 10으로 나눈 나머지를 구하여 data에 삽입한다.
		}

		int computer = (data == 0) ? 10 : data; // 1의 자리가 0이면 10번 컴퓨터가, 나머지는 그 숫자의 컴퓨터가 데이터를 처리한다.
		cout << computer << endl; // 처리하는 컴퓨터 출력
	}
	return 0;
}
